

from aiogram.dispatcher import FSMContext

import keyboards

from StateMachine import NewStateMachine
import config
import TGCalendar.telegramcalendar as tgcalendar
from aiogram import Dispatcher, types


async def reserve(message: types.Message):
    calendar_keyboard = tgcalendar.create_calendar()
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:", reply_markup=calendar_keyboard)


# —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞
async def set_admin_state(message: types.Message, state: FSMContext):
    if str(message.from_user.id) in config.ADMIN_IDS:
        admin_kb = keyboards.admin_keyboard()
        await state.set_state(NewStateMachine.ADMIN.set())  # set admin state
        await message.answer("–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞", reply_markup=admin_kb)
    else:
        await message.answer("–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤–∞—Å")


def register_user_handlers_menu(dp: Dispatcher):
    dp.register_message_handler(set_admin_state, commands=['admin'])
    dp.register_message_handler(reserve, lambda m: m.text.startswith('ü™ë–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫'))
    dp.register_message_handler(reserve, commands=['reserve'])

